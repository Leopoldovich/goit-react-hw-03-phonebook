{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Filter","value","onChange","className","s","filterWrapper","type","filterInput","prototype","PropTypes","string","func","isRequired","ContactForm","state","name","number","handleChange","e","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","form","input","pattern","title","required","btn","Component","ContactListItem","contact","onDeleteContact","contactItem","btnDel","onClick","id","shape","ContactList","visibleContacts","contactList","map","arrayOf","App","contacts","filter","submitFromForm","data","find","alert","uuidv4","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","onVisibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff9036eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__28uxK\",\"input\":\"ContactForm_input__1EWv-\",\"btn\":\"ContactForm_btn__3nMv_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__16w0m\",\"filterInput\":\"Filter_filterInput__1J0Fi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__1OUgK\",\"btnDel\":\"ContactListItem_btnDel__2PZwk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__36mgx\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nconst Filter = ({ value, onChange }) => (\n  <div className={s.filterWrapper}>\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        className={s.filterInput}\n      />\n    </label>\n  </div>\n);\n\nFilter.prototype = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = { onSubmit: PropTypes.func.isRequired };\n  state = {\n    name: '',\n    number: '',\n  };\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={s.btn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({ contact, onDeleteContact }) => {\n  return (\n    <li className={s.contactItem}>\n      {contact.name}: {contact.number}\n      <button\n        type=\"button\"\n        className={s.btnDel}\n        onClick={() => onDeleteContact(contact.id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.prototype = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ visibleContacts, onDeleteContact }) => {\n  return (\n    <ul className={s.contactList}>\n      {visibleContacts.map(contact => (\n        <ContactListItem\n          key={contact.id}\n          contact={contact}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.prototype = {\n  visibleContacts: PropTypes.arrayOf(PropTypes.string),\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Filter from './components/Filter';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  submitFromForm = data => {\n    const { name } = data;\n    const nameAlreadyIs = this.state.contacts.find(\n      contact => contact.name === name,\n    );\n\n    if (nameAlreadyIs) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    data.id = uuidv4();\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, data],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    const newContactsArr = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return newContactsArr;\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n  render() {\n    const onVisibleContacts = this.getVisibleContacts();\n    const { filter } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.submitFromForm} />\n        <h2> Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          visibleContacts={onVisibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}